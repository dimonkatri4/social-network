{"version":3,"sources":["components/Main/Dialogs/DialogItem/dialogItem.module.css","components/Main/Dialogs/dialogs.module.css","components/Main/Dialogs/Message/message.module.css","components/Main/Dialogs/NameDialog/nameDialog.module.css","components/Main/Dialogs/SelectDialog/selectDialog.module.css","components/Main/Dialogs/InputMessage/inputMessage.module.css","components/Main/Dialogs/DialogItem/DialogItem.jsx","components/Main/Dialogs/Message/Message.jsx","components/Main/Dialogs/NameDialog/NameDialog.jsx","components/Main/Dialogs/SelectDialog/SelectDialog.jsx","components/Main/Dialogs/InputMessage/InputMessage.jsx","components/Main/Dialogs/InputMessage/InputMessageContainer.jsx","components/Main/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","activeClassName","active","photo_user","src","img","alt","name","Message","message","user_photo","photoUser","triangle","text","NameDialog","name_dialog","status","SelectDialog","select_dialog","maxLength30","maxLength","InputMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","input_text","Field","component","Textarea","placeholder","validate","required","InputMessageContainer","connect","state","dispatch","formData","addMessage","messageText","withAuthRedirect","Component","RedirectComponent","this","isAuth","React","auth","nameDialogs","dialogsPage","dialogs","map","el","render","key","dialogsElement","messagesElement","messages","caption","dialogsItem","exact"],"mappings":"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","file":"static/js/4.11a88184.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialogItem_dialog__JQJ_k\",\"photo_user\":\"dialogItem_photo_user__wzfo6\",\"active\":\"dialogItem_active__3iRaU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__3xsB-\",\"dialogsItem\":\"dialogs_dialogsItem__3S588\",\"caption\":\"dialogs_caption__oEVSc\",\"messages\":\"dialogs_messages__5Nwk5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"message_text__24-ql\",\"user_photo\":\"message_user_photo__1qlpM\",\"message\":\"message_message__1GH3e\",\"triangle\":\"message_triangle__3lFr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name_dialog\":\"nameDialog_name_dialog__2KCmU\",\"status\":\"nameDialog_status__2NxnJ\",\"name\":\"nameDialog_name__1ZjqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select_dialog\":\"selectDialog_select_dialog__Blnmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_text\":\"inputMessage_input_text__3cBbF\",\"send\":\"inputMessage_send__1nciT\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './dialogItem.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialog/\" + props.id\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>\r\n                <div className={s.photo_user}>\r\n                    <img src={props.img} alt=\"\" />\r\n                </div>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem","import React from 'react'\r\nimport s from './message.module.css'\r\nimport photoUser from '../../../../images/photo-user.jpg'\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.user_photo}>\r\n                <img src={photoUser} alt=\"\"/>\r\n            </div>\r\n            <div className={s.triangle}></div> \r\n            <div className={s.text}>{props.message}</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './nameDialog.module.css'\r\n\r\nconst NameDialog = (props) => {\r\n    return (\r\n        <div className={s.name_dialog}>\r\n            <div>\r\n                <img src={props.img} alt=\"\" />\r\n            </div>\r\n            <div className={s.name}>{props.name}\r\n                <div className={s.status}>online</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameDialog\r\n","import React from 'react'\r\nimport s from './selectDialog.module.css'\r\n\r\nconst SelectDialog = (props) => {\r\n    return (\r\n        <div className={s.select_dialog}>\r\n            <h2>Select dialog</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectDialog","import React from 'react'\r\nimport s from './inputMessage.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormsControl\";\r\nimport {maxLength, required} from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLength30 = maxLength(30)\r\n\r\nconst InputMessageForm = (props) => {\r\n\r\n    // let newMessage = () => {\r\n    //     props.addMessage();\r\n    // }\r\n    // let onMessageChange = (event) => {\r\n    //     let text = event.target.value;\r\n    //     props.updateNewMessage(text);\r\n    // }\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div className={s.input_text}>\r\n            <Field\r\n                component={Textarea}\r\n                name={'messageText'}\r\n                placeholder=\"write message\"\r\n                validate={[required,maxLength30]}\r\n            />\r\n            <button className='button'>Send</button>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst InputMessageFormRedux = reduxForm({form:'inputMessage'})(InputMessageForm)\r\n\r\nexport default InputMessageFormRedux","import {addMessage} from '../../../../redux/dilogs-reducer';\r\nimport {connect} from \"react-redux\";\r\nimport InputMessageFormRedux from \"./InputMessage\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSubmit: (formData) => {\r\n            dispatch(addMessage(formData.messageText))\r\n        }\r\n    }\r\n}\r\nconst InputMessageContainer = connect(mapStateToProps,mapDispatchToProps)(InputMessageFormRedux)\r\n\r\nexport default InputMessageContainer","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport s from './dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport NameDialog from './NameDialog/NameDialog'\r\nimport SelectDialog from './SelectDialog/SelectDialog'\r\nimport InputMessageContainer from \"./InputMessage/InputMessageContainer\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let nameDialogs = props.dialogsPage.dialogs\r\n        .map(el => <Route path={`/dialog/${el.id}`}\r\n                          render={() => <NameDialog img={el.img} name={el.name} key={el.id}/>}/>)\r\n\r\n    // let number = Number();\r\n    // props.dialogsPage.dialogs\r\n    //     .map(el => <Route path={`/dialog/${el.id}`} render={() => <InputMessage addMessage={props.addMessage} />} />)\r\n\r\n    let dialogsElement = props.dialogsPage.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} img={dialog.img} key={dialog.id}/>)\r\n\r\n    let messagesElement = props.dialogsPage.messages\r\n        .map(message => <Route path='/dialog/:numder'\r\n                               render={() => <Message message={message.message} key={message.id}/>}/>)\r\n\r\n/*    if (!props.isAuth) {\r\n        return <Redirect to='/login'/>\r\n    }*/\r\n    return (\r\n        <div className={`${s.dialogs} profile_block`}>\r\n            <div className={`${s.caption} caption`}>\r\n                <h3 className=\"title\">All Messages</h3>\r\n            </div>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {nameDialogs}\r\n                {messagesElement}\r\n                <Route path='/dialog/:number' render={() => <InputMessageContainer/>}/>\r\n                <Route exact path=\"/dialog\" render={() => <SelectDialog/>}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Dialogs)","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n\r\n    }\r\n    let mapStateToPropsForAuth = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    return connect(mapStateToPropsForAuth)(RedirectComponent);\r\n}\r\n"],"sourceRoot":""}