{"version":3,"file":"static/js/890.dba94607.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Main/Profile/Post/post.module.css?2fa7","components/Main/Profile/Post/Post.jsx","components/Main/Profile/MyPosts/MyPosts.jsx","webpack://react-1/./src/components/Main/Profile/profile.module.css?46c8","webpack://react-1/./src/components/Main/Profile/CreatePost/createPost.module.css?4cc4","components/Main/Profile/CreatePost/CreatePost.jsx","components/Main/Profile/CreatePost/CreatePostContainer.jsx","webpack://react-1/./src/components/Main/Profile/Cover/CoverInfo/coverInfo.module.css?29a4","webpack://react-1/./src/components/Main/Profile/ProfileStatus/profileStatus.module.css?ae9a","components/Main/Profile/ProfileStatus/ProfileStatusWithHook.jsx","components/Main/Profile/Cover/CoverInfo/CoverInfo.jsx","webpack://react-1/./src/components/Main/Profile/Cover/CoverPhoto/coverPhoto.module.css?8e7a","components/Main/Profile/Cover/CoverPhoto/CoverPhoto.jsx","webpack://react-1/./src/components/Main/Profile/Cover/MainPhoto/mainPhoto.module.css?0128","components/Main/Profile/Cover/MainPhoto/MainPhoto.jsx","webpack://react-1/./src/components/Main/Profile/Cover/cover.module.css?bb4d","components/Main/Profile/Cover/Cover.jsx","components/Main/Profile/Profile.jsx","components/Main/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__bqeNB\",\"caption\":\"post_caption__OVOV+\",\"date\":\"post_date__bbJd4\",\"message\":\"post_message__zukXd\",\"userName\":\"post_userName__tOfVf\",\"post_panel\":\"post_post_panel__6lrw8\",\"like\":\"post_like__P6Y2O\",\"share\":\"post_share__+hVBR\",\"panelIcon\":\"post_panelIcon__bUEQv\"};","import React from 'react'\r\nimport s from './post.module.css'\r\nimport photoUser from '../../../../images/photo-user.jpg'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Post = (props) => {\r\n\r\n    const changeLike = () => {\r\n        props.changeIsLiked(props.id);\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.item} profile_block`}>\r\n            <div className={s.caption}>\r\n                <img src={props.photo ? props.photo : photoUser} alt=\"userPhoto\" />\r\n                <div className={s.userName}>{props.userName}</div>\r\n                <div className={s.date}>Published: {props.date}</div>\r\n            </div>\r\n            <div className={s.message}>{props.message}</div>\r\n            <div className={s.post_panel}>\r\n                <ul>\r\n                    <li>\r\n                        <div className={classNames(s.like, s.panelIcon)} onClick={changeLike}>\r\n                            <FontAwesomeIcon icon={props.isLiked ? [\"fas\",\"heart\"] : [\"far\",\"heart\"]}/>\r\n                        </div>\r\n                        <span>{props.likeCount}</span>\r\n                    </li>\r\n                    <li>\r\n                        <div className={s.panelIcon}><FontAwesomeIcon icon={[\"far\",\"eye\"]}/></div>\r\n                        <span >{props.viewsCount}</span>\r\n                    </li>\r\n                    <li>\r\n                        <div className={s.panelIcon}><FontAwesomeIcon icon={[\"far\",\"comment\"]}/></div>\r\n                        <span >{props.commentsCount}</span>\r\n                    </li>\r\n                    <li>\r\n                        <div className={classNames(s.share,s.panelIcon)}><FontAwesomeIcon icon={[\"far\",\"share-square\"]}/></div>\r\n                        <span >{props.shareCount}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport Post from '../Post/Post'\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postElement = props.posts\r\n        .map(post => <Post\r\n            message={post.message}\r\n            likeCount={post.likeCount}\r\n            userName={post.userName}\r\n            commentsCount={post.commentsCount}\r\n            viewsCount={post.viewsCount}\r\n            shareCount={post.shareCount}\r\n            date={post.date}\r\n            isLiked={post.isLiked}\r\n            id={post.id}\r\n            changeIsLiked={props.changeIsLiked}\r\n            key={post.id}\r\n            photo={post.photo}\r\n        />)\r\n\r\n    return (\r\n        <div>\r\n            {postElement}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"profile_content__O0Wwd\"};","// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"createPost_ava__oclsV\",\"profile_block\":\"createPost_profile_block__gOVY4\",\"create_post\":\"createPost_create_post__EwC5m\",\"panel\":\"createPost_panel__ZPjYa\",\"inputText\":\"createPost_inputText__blfTH\",\"iconPanel\":\"createPost_iconPanel__xLaHL\"};","import React from 'react'\r\nimport s from \"./createPost.module.css\"\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {maxLength, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormsControl\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport photoUser from '../../../../images/photo-user.jpg'\r\n\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <Form onSubmit={props.onSubmit}>\r\n            {({handleSubmit}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className={s.inputText}>\r\n                        <Field\r\n                            component={Textarea}\r\n                            name={'messageText'}\r\n                            placeholder=\"write something\"\r\n                            validate={required}\r\n                        />\r\n                        <div className={s.panel}>\r\n                            <span className={s.iconPanel}><FontAwesomeIcon icon=\"music\"/></span>\r\n                            <span className={s.iconPanel}><FontAwesomeIcon icon=\"image\"/></span>\r\n                            <span className={s.iconPanel}><FontAwesomeIcon icon=\"video\"/></span>\r\n                            <span className={s.iconPanel}><FontAwesomeIcon icon=\"camera\"/></span>\r\n                            <button className=\"button\">Publish</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\n//const PostFormRedux = reduxForm({form: 'createPost'})(PostForm)\r\n\r\nconst CreatePost = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.messageText);\r\n        formData.messageText = \"\";\r\n    }\r\n    return (\r\n        <div className={`${s.profile_block} profile_block`}>\r\n            <div className={s.create_post}>\r\n                {props.profileOwner && <img\r\n                    className={s.ava}\r\n                    src={props.profileOwner.photos.small ? props.profileOwner.photos.small : photoUser}\r\n                    alt=\"avatar\"/>}\r\n                <PostForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","import {addPost} from '../../../../redux/profile-reducer';\r\nimport CreatePost from \"./CreatePost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileOwner: state.profilePage.profileOwner\r\n    }\r\n}\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPost())\r\n        },\r\n        updateNewPost: (text) => {\r\n            dispatch(updateNewPost(text))\r\n        }\r\n    }\r\n}*/\r\n\r\nconst CreatePostContainer = connect(mapStateToProps, {addPost})(CreatePost)\r\n\r\nexport default CreatePostContainer","// extracted by mini-css-extract-plugin\nexport default {\"cover_info\":\"coverInfo_cover_info__nAPKC\",\"user_name\":\"coverInfo_user_name__Dd+2Z\",\"nameWithStatus\":\"coverInfo_nameWithStatus__R7RK0\"};","// extracted by mini-css-extract-plugin\nexport default {\"addStatus\":\"profileStatus_addStatus__8Dce2\",\"statusBlock\":\"profileStatus_statusBlock__YLEVl\",\"textStatus\":\"profileStatus_textStatus__yVGMD\",\"inputStatus\":\"profileStatus_inputStatus__GgleJ\",\"error\":\"profileStatus_error__BCCwu\",\"inputBlock\":\"profileStatus_inputBlock__HH7hR\",\"close\":\"profileStatus_close__yMloK\",\"updateStatus\":\"profileStatus_updateStatus__SaYvJ\"};","import React, {useEffect, useRef, useState} from \"react\";\r\nimport style from \"./profileStatus.module.css\"\r\nimport classNames from \"classnames\";\r\nimport {faTimes, faCheck} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n        props.setErrorInStatus(null)\r\n    }, [props.status,editMode]);\r\n\r\n    const useOutsideClick = (ref) => {\r\n        useEffect(() => {\r\n            // Edit state if clicked on outside of element\r\n            const handleClickOutside = e => {\r\n                if (editMode && !ref.current.contains(e.target)) {\r\n                    exitOfInputStatus();\r\n                }\r\n            }\r\n            // Bind the event listener\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            }\r\n        }, [ref,editMode]);\r\n    }\r\n    const wrapperRef = useRef(null);\r\n    useOutsideClick(wrapperRef);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const updateProfileStatus = () => {\r\n        props.updateStatus(status)\r\n        if (status.length <= 300) {\r\n            setEditMode(false)\r\n        } else {\r\n            props.setErrorInStatus()\r\n        }\r\n    }\r\n    const exitOfInputStatus = () => {\r\n        setEditMode(false);\r\n        setStatus(props.status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        let text = e.target.value;\r\n        setStatus(text);\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        e.key === 'Enter' && updateProfileStatus();\r\n        e.key === 'Escape' && exitOfInputStatus();\r\n    }\r\n\r\n    return <div className={style.statusBlock}>\r\n        {!editMode &&\r\n        <span className={style.textStatus} onDoubleClick={props.isOwner ? activateEditMode : undefined}\r\n              title=\"Double click to change status\">{props.status\r\n        || props.isOwner && <span className={style.addStatus}>Double click to add status</span>} </span>\r\n        }\r\n        {editMode &&\r\n        <div className={style.inputBlock} ref={wrapperRef}>\r\n            <input className={classNames(\"inputPlace\", style.inputStatus)} onChange={onStatusChange}\r\n                   autoFocus={true} value={status} onKeyDown={handleKeyDown}/>\r\n            <span className={style.updateStatus}><FontAwesomeIcon icon={faCheck} onClick={() => updateProfileStatus()}/></span>\r\n            <span className={style.close}><FontAwesomeIcon icon={faTimes} onClick={exitOfInputStatus}/></span>\r\n        </div>\r\n        }\r\n        {\r\n            props.errorInStatus && <div className={style.error}>{props.errorInStatus}</div>\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\nexport default ProfileStatusWithHook","import React from 'react'\r\nimport CoverMenu from './CoverMenu/CoverMenu'\r\nimport s from \"./coverInfo.module.css\"\r\nimport ProfileStatusWithHook from \"../../ProfileStatus/ProfileStatusWithHook\";\r\n\r\n\r\nconst CoverInfo = (props) => {\r\n    return (\r\n        <div className={s.cover_info}>\r\n            <div className={s.nameWithStatus}>\r\n                <div className={s.user_name}>{props.fullName}</div>\r\n                <ProfileStatusWithHook status={props.status}\r\n                                       updateStatus={props.updateStatus}\r\n                                       isOwner={props.isOwner}\r\n                                       errorInStatus={props.errorInStatus}\r\n                                       setErrorInStatus={props.setErrorInStatus}\r\n                />\r\n            </div>\r\n            {/*<CoverMenu/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoverInfo","// extracted by mini-css-extract-plugin\nexport default {\"cover_photo\":\"coverPhoto_cover_photo__hIOOG\"};","import React from 'react'\r\nimport s from \"./coverPhoto.module.css\"\r\nimport coverPhoto from '../../../../../images/cover-photo.jpg'\r\n\r\nconst CoverPhoto = () => {\r\n    return (\r\n        <div className={s.cover_photo}>\r\n            <img src={coverPhoto} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoverPhoto","// extracted by mini-css-extract-plugin\nexport default {\"main_photo\":\"mainPhoto_main_photo__SCAl9\",\"inputPhoto\":\"mainPhoto_inputPhoto__gA-m-\",\"inputTag\":\"mainPhoto_inputTag__nv6BS\",\"photoBlock\":\"mainPhoto_photoBlock__Tnu6a\",\"inputWrapper\":\"mainPhoto_inputWrapper__9hg07\"};","import React, {useEffect, useRef} from 'react'\r\nimport s from \"./mainPhoto.module.css\"\r\nimport photoUser from '../../../../../images/photo-user.jpg'\r\nimport {faCamera} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst MainPhoto = (props) => {\r\n\r\n    const mainPhotoRef = useRef(null);\r\n    useEffect(() => {\r\n        props.getMainPhotoRef(mainPhotoRef);\r\n    },[mainPhotoRef])\r\n\r\n    const updatePhoto = (e) => {\r\n       if( e.target.files.length !== 0) {\r\n           props.savePhoto(e.target.files[0])\r\n    }\r\n    }\r\n\r\n    return (\r\n        <div className={s.photoBlock} ref={mainPhotoRef}>\r\n            <div className={s.main_photo} onClick={() => props.setActive(true)}>\r\n                <img src={props.photo.large || photoUser} alt=\"\"/>\r\n            </div>\r\n            {props.isOwner && <div className={s.inputWrapper}>\r\n                <input type=\"file\" accept=\"image/*\" id=\"inputPhoto\" onChange={updatePhoto} className={s.inputTag}/>\r\n                <label htmlFor=\"inputPhoto\" className={s.inputPhoto}><FontAwesomeIcon icon={faCamera}/></label>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPhoto","// extracted by mini-css-extract-plugin\nexport default {\"cover\":\"cover_cover__enV07\"};","import React from 'react'\r\nimport CoverInfo from './CoverInfo/CoverInfo'\r\nimport CoverPhoto from './CoverPhoto/CoverPhoto'\r\nimport MainPhoto from './MainPhoto/MainPhoto'\r\nimport s from \"./cover.module.css\"\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst Cover = (props) => {\r\n    return (<>\r\n            {!props.profile ? <Preloader/> :\r\n                <div className={s.cover}>\r\n                    <CoverPhoto/>\r\n                    <MainPhoto photo={props.profile.photos}\r\n                               isOwner={props.isOwner}\r\n                               savePhoto={props.savePhoto}\r\n                               getMainPhotoRef={props.getMainPhotoRef}\r\n                               setActive={props.setActive}\r\n                               getMainPhotoRef={props.getMainPhotoRef}\r\n                    />\r\n                    <CoverInfo fullName={props.profile.fullName}\r\n                               status={props.status}\r\n                               updateStatus={props.updateStatus}\r\n                               isOwner={props.isOwner}\r\n                               errorInStatus={props.errorInStatus}\r\n                               setErrorInStatus={props.setErrorInStatus}\r\n                    />\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cover","import React from 'react'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport s from \"./profile.module.css\"\r\nimport CreatePostContainer from \"./CreatePost/CreatePostContainer\";\r\nimport Cover from \"./Cover/Cover\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n     if(!props.isAuth) return <Redirect to='/login'/>\r\n    return ( <>\r\n            <Cover profile={props.profilePage.profile}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n                   isOwner = {props.isOwner}\r\n                   savePhoto = {props.savePhoto}\r\n                   errorInStatus={props.profilePage.error}\r\n                   setErrorInStatus={props.setErrorInStatus}\r\n                   getMainPhotoRef={props.getMainPhotoRef}\r\n                   setActive={props.setActive}\r\n                   getMainPhotoRef={props.getMainPhotoRef}\r\n            />\r\n        <div className={s.content}>\r\n            <CreatePostContainer/>\r\n            <MyPosts posts={props.profilePage.posts}\r\n                     changeIsLiked={props.changeIsLiked} />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeIsLiked,\r\n    getProfile,\r\n    getStatus,\r\n    savePhoto,\r\n    setErrorInStatus,\r\n    updateStatus\r\n} from \"../../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getMainPhotoRef} from \"../../../redux/app-reducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId=this.props.authId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        if (userId) {\r\n            this.props.getProfile(userId);\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"PROFILECONTAINER RENDER\")\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n        profilePage: state.profilePage,\r\n        status: state.profilePage.status,\r\n        authId: state.auth.userId,\r\n        isAuth:state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getProfile,getStatus,updateStatus, savePhoto, setErrorInStatus,changeIsLiked, getMainPhotoRef}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\nlet withAuth = withAuthRedirect(ProfileContainer);\r\n\r\nlet WithUrlDataContainerComponent = withRouter(withAuth);\r\n\r\nexport default connect(mapStateToProps,{getProfile})(WithUrlDataContainerComponent)*/\r\n"],"names":["props","className","s","src","photo","photoUser","alt","userName","date","message","classNames","onClick","changeIsLiked","id","icon","isLiked","likeCount","viewsCount","commentsCount","shareCount","React","postElement","posts","map","post","key","PostForm","onSubmit","handleSubmit","component","Textarea","name","placeholder","validate","required","profileOwner","photos","small","formData","addPost","messageText","connect","state","profilePage","CreatePost","useState","editMode","setEditMode","status","setStatus","useEffect","setErrorInStatus","ref","wrapperRef","useRef","handleClickOutside","e","current","contains","target","exitOfInputStatus","document","addEventListener","removeEventListener","updateProfileStatus","updateStatus","length","style","onDoubleClick","isOwner","undefined","title","onChange","text","value","autoFocus","onKeyDown","faCheck","faTimes","errorInStatus","fullName","coverPhoto","mainPhotoRef","getMainPhotoRef","setActive","large","type","accept","files","savePhoto","htmlFor","faCamera","profile","Preloader","isAuth","error","to","ProfileContainer","userId","this","match","params","authId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","console","log","compose","auth","withRouter"],"sourceRoot":""}